name: ci-lifecompanion

on:
  workflow_call:
    inputs:
      target_env:
        required: true
        type: string
      runs_on:
        required: true
        type: string
      gradle_command:
        required: true
        type: string
      download_build_resources:
        type: boolean
      plugin_dir_name:
        type: string
      extra_plugin_build_args:
        type: string
    secrets:
      framework_server_url:
        required: true
      framework_server_login:
        required: true
      framework_server_password:
        required: true
      app_server_url:
        required: false
      app_server_query_parameters:
        required: false
      app_server_public_key:
        required: false
      aws_access_key:
        required: false
      aws_secret:
        required: false

# TODO : be able to select branch or tag
# TODO : comment and description on fields

jobs:
  build:
    runs-on: ${{inputs.runs_on}}
    steps:
      - name: Create runner directory on Windows
        if: ${{ inputs.runs_on == 'windows-2022' }}
        run: |
          mkdir \actions-runner ; cd \actions-runner
        shell: bash

      - name: Create runner directory on Unix
        if: ${{ inputs.runs_on == 'ubuntu-22.04' }}
        run: |
          mkdir actions-runner && cd actions-runner
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name : Add +X on Gradle scripts
        run: chmod +x lifecompanion-framework/gradlew & chmod +x lifecompanion/gradlew
                            
      - name: Prepare target env configuration
        run: |
          echo "lifecompanion.framework.server.url = $LIFECOMPANION_FRAMEWORK_SERVER_URL" >> env/.env.${{inputs.target_env}}
          echo "lifecompanion.framework.server.login = $LIFECOMPANION_FRAMEWORK_SERVER_LOGIN" >> env/.env.${{inputs.target_env}}
          echo "lifecompanion.framework.server.password = $LIFECOMPANION_FRAMEWORK_SERVER_PASSWORD" >> env/.env.${{inputs.target_env}}
          echo "lifecompanion.app.server.url = $LIFECOMPANION_APP_SERVER_URL" >> env/.env.${{inputs.target_env}}
          echo "lifecompanion.app.server.query.parameters = $LIFECOMPANION_APP_SERVER_QUERY_PARAMETERS" >> env/.env.${{inputs.target_env}}
          echo "lifecompanion.app.server.public_key = $LIFECOMPANION_APP_SERVER_PUBLIC_KEY" >> env/.env.${{inputs.target_env}}
        shell: bash
        env:
          LIFECOMPANION_FRAMEWORK_SERVER_URL: ${{secrets.framework_server_url}}
          LIFECOMPANION_FRAMEWORK_SERVER_LOGIN: ${{secrets.framework_server_login}}
          LIFECOMPANION_FRAMEWORK_SERVER_PASSWORD: ${{secrets.framework_server_password}}
          LIFECOMPANION_APP_SERVER_URL: ${{secrets.app_server_url}}
          LIFECOMPANION_APP_SERVER_QUERY_PARAMETERS: ${{secrets.app_server_query_parameters}}
          LIFECOMPANION_APP_SERVER_PUBLIC_KEY: ${{secrets.app_server_public_key}}

      - name: Prepare target env configuration for AWS
        if: ${{inputs.download_build_resources}}
        run: |
          echo "lifecompanion.build.resources.s3.access.key = $LIFECOMPANION_AWS_ACCESS_KEY" >> env/.env.${{inputs.target_env}}
          echo "lifecompanion.build.resources.s3.secret = $LIFECOMPANION_AWS_SECRET" >> env/.env.${{inputs.target_env}}
        shell: bash
        env:
          LIFECOMPANION_AWS_ACCESS_KEY: ${{secrets.aws_access_key}}
          LIFECOMPANION_AWS_SECRET: ${{secrets.aws_secret}}
            
      - name: Build LifeCompanion framework
        uses: gradle/actions/setup-gradle@v3
        with:
          build-root-directory: lifecompanion-framework
          arguments: publishToMavenLocal

      - name: Build LifeCompanion app
        if: ${{inputs.plugin_dir_name}}
        uses: gradle/actions/setup-gradle@v3
        with:
          build-root-directory: lifecompanion
          arguments: publishToMavenLocal

      - name : Add +X on plugin Gradle scripts
        if: ${{inputs.plugin_dir_name}}
        run: chmod +x lifecompanion-plugins/${{inputs.plugin_dir_name}}/gradlew
      
      - name: Install Android SDK if needed
        if: ${{inputs.plugin_dir_name == 'lc-phonecontrol-plugin'}}
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip commandlinetools-linux-11076708_latest.zip -d /opt/android-sdk
          rm commandlinetools-linux-11076708_latest.zip
          echo "export ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/35.0.0:$PATH" >> $GITHUB_ENV
          yes | sdkmanager --sdk_root="/opt/android-sdk" --licenses
          sdkmanager --sdk_root="/opt/android-sdk" "platform-tools" "platforms;android-26" "platforms;android-35" "build-tools;35.0.0"
          echo "sdk.dir=/opt/android-sdk" > lifecompanion-plugins/${{inputs.plugin_dir_name}}/android/local.properties
          chmod +x lifecompanion-plugins/${{inputs.plugin_dir_name}}/android/gradlew
        shell: bash

      - name: Execute plugin build command
        if: ${{inputs.plugin_dir_name}}
        uses: gradle/actions/setup-gradle@v3
        with:
          build-root-directory: lifecompanion-plugins/${{inputs.plugin_dir_name}}
          arguments: ${{ inputs.extra_plugin_build_args || 'clean jar' }}
          
      - name: Call update build and publish command
        uses: gradle/actions/setup-gradle@v3
        with:
          build-root-directory: lifecompanion
          arguments: |
            ${{inputs.gradle_command}}
            -Penv=${{inputs.target_env}}
            -Pinnosetup.path=iscc.exe
            -Pvisibility=PUBLISHED
            --stacktrace
